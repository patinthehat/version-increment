# vim: tabstop=4:softtabstop=4:shiftwidth=4:noexpandtab
# Makefile template

THISPROJECT="version-increment"
THISDATE=`date`
SRCPATH=src
BUILDDIR=build
INSTALLDIR=~/scripts

JSON_C_DIR=/usr
CFLAGS += -I$(JSON_C_DIR)/include/json-c
LDFLAGS+= -L$(JSON_C_DIR)/lib -ljson-c

all: init version-increment version-increment2
	@echo "\n* Compiled all targets for $(THISPROJECT) project."
	@exit 0

version-increment: init $(SRCPATH)/version-increment.c
	@gcc -O3 $(SRCPATH)/$@.c $(SRCPATH)/utils.c -o $(BUILDDIR)/$@
	@echo "* Build finished: '$@'"
	@exit 0

version-increment2: init $(SRCPATH)/version-increment2.c
	@gcc -O3 $(SRCPATH)/$@.c $(SRCPATH)/utils.c -o $(BUILDDIR)/$@
	@echo "* Build finished: '$@'"
	@exit 0

strip: 
	@if [ -f "$(BUILDDIR)/version-increment" ]; then  strip "$(BUILDDIR)/version-increment"; echo "* Stripped version-increment"; fi
	@echo "\n* Stripped all built files."
	@exit 0

install: strip
	@if [ -f "$(BUILDDIR)/version-increment" ]; then  cp $(BUILDDIR)/version-increment $(INSTALLDIR)/version-increment; echo "* Installed version-increment"; fi
	@echo "\n* Installed all built files."
	@exit 0

init:
	@echo "//automatically generated by make" > src/build-date.h
	@echo " " >> src/build-date.h
	@echo "#define BUILD_DATE \"$(THISDATE)\"" >> src/build-date.h
	@echo "//automatically generated by make" > src/version.h
	@echo " " >> src/version.h
	@version-increment src/version.txt
	@printf "#define VERSION \"%s\"\n" `cat src/version.txt` >> src/version.h
	@exit 0

clean:  
	@if [ -f $(BUILDDIR)/version-increment ]; then  rm "$(BUILDDIR)/version-increment"; echo "* Removed version-increment"; fi
	@echo "\n* Cleaned all built files."
	@exit 0

#.PHONY: test help


